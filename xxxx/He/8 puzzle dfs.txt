#include <bits/stdc++.h>
using namespace std;
#define pb push_back
void giveans(vector<vector<int>>initial,vector<vector<int>>final,int i,int
j,vector<pair<int,int>>ans)
{
 if(initial==final)
 {
 for(auto i:ans)
 {
 cout<<i.first<<" "<<i.second<<"\n";
 }
 cout<<"\n";
 return;
 }
 if(ans.size()>9)
 {


 return;
 }
 if(i+1<3&&initial[i+1][j]!=final[i+1][j])
 {
 ans.pb({i+1,j});
 swap(initial[i][j],initial[i+1][j]);
 giveans(initial,final,i+1,j,ans);
 swap(initial[i][j],initial[i+1][j]);
 ans.pop_back();
 }
 if(j+1<3&&initial[i][j+1]!=final[i][j+1])
 {
 ans.pb({i,j+1});
 swap(initial[i][j+1],initial[i][j]);
 giveans(initial,final,i,j+1,ans);
 swap(initial[i][j+1],initial[i][j]);
 ans.pop_back();
 }
 if(i-1>=0&&initial[i-1][j]!=final[i-1][j])
 {
 ans.pb({i-1,j});
 swap(initial[i][j],initial[i-1][j]);
 giveans(initial,final,i-1,j,ans);
 swap(initial[i][j],initial[i-1][j]);
 ans.pop_back();
 }
 if(j-1>=0&&initial[i][j-1]!=final[i][j-1])
 {
 ans.pb({i,j-1});
 swap(initial[i][j],initial[i][j-1]);
 giveans(initial,final,i,j-1,ans);
 swap(initial[i][j],initial[i][j-1]);
 ans.pop_back();
 }
}
int main(int argc, char const *argv[])
{
 std::vector<vector<int>>initial(3,vector<int>(3,0));
 vector<vector<int>>final(3,vector<int>(3,0));
 //cout<<"initial CONDITION"<<"\n";
 for(int i=0;i<3;i++)
 {
 for(int j=0;j<3;j++)
 {
 cin>>initial[i][j];
 }
 }
 //cout<<"FINAL GOAL"<<"\n";
 for(int i=0;i<3;i++)
 {
 for(int j=0;j<3;j++)
 {
 cin>>final[i][j];
 }
 }
 std::vector<pair<int,int>>ans;
 for (int i=0;i<3;i++){
    for (int j=0;j<3;j++){
        if (initial[i][j]==0){
            giveans(initial,final,i,j,ans);
        }
    }
 }

 return 0;
}


// 2 8 3
// 1 6 4
// 7 0 5

// 1 2 3
// 8 0 4
// 7 6 5

